{
  "_args": [
    [
      {
        "raw": "mt-files-downloader@github:zeltice/node-mt-files-downloader",
        "scope": null,
        "escapedName": "mt-files-downloader",
        "name": "mt-files-downloader",
        "rawSpec": "github:zeltice/node-mt-files-downloader",
        "spec": "github:zeltice/node-mt-files-downloader",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:zeltice/node-mt-files-downloader.git",
          "sshUrl": "git+ssh://git@github.com/zeltice/node-mt-files-downloader.git",
          "httpsUrl": "git+https://github.com/zeltice/node-mt-files-downloader.git",
          "gitUrl": "git://github.com/zeltice/node-mt-files-downloader.git",
          "shortcut": "github:zeltice/node-mt-files-downloader",
          "directUrl": "https://raw.githubusercontent.com/zeltice/node-mt-files-downloader/master/package.json"
        }
      },
      "/home/kura52/RubymineProjects/sushi-browser"
    ]
  ],
  "_from": "zeltice/node-mt-files-downloader",
  "_id": "mt-files-downloader@0.2.5",
  "_inCache": true,
  "_location": "/mt-files-downloader",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mt-files-downloader@github:zeltice/node-mt-files-downloader",
    "scope": null,
    "escapedName": "mt-files-downloader",
    "name": "mt-files-downloader",
    "rawSpec": "github:zeltice/node-mt-files-downloader",
    "spec": "github:zeltice/node-mt-files-downloader",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:zeltice/node-mt-files-downloader.git",
      "sshUrl": "git+ssh://git@github.com/zeltice/node-mt-files-downloader.git",
      "httpsUrl": "git+https://github.com/zeltice/node-mt-files-downloader.git",
      "gitUrl": "git://github.com/zeltice/node-mt-files-downloader.git",
      "shortcut": "github:zeltice/node-mt-files-downloader",
      "directUrl": "https://raw.githubusercontent.com/zeltice/node-mt-files-downloader/master/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/zeltice/node-mt-files-downloader.git#cf233010b9278a8e16dab86dbfd052414672992b",
  "_shasum": "07fdba0f669d49131eb166ef9be6415825f2b194",
  "_shrinkwrap": null,
  "_spec": "mt-files-downloader@github:zeltice/node-mt-files-downloader",
  "_where": "/home/kura52/RubymineProjects/sushi-browser",
  "author": {
    "name": "Leeroy Brun",
    "email": "leeroy.brun@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/leeroybrun/node-mt-files-downloader/issues"
  },
  "dependencies": {
    "moment": "^2.12.0",
    "zeltice-mt-downloader": "^1.1.0"
  },
  "description": "Download manager with multiple features : download stats, stop & resume, auto-retry (continue) in case of error, events, etc.",
  "devDependencies": {},
  "gitHead": "cf233010b9278a8e16dab86dbfd052414672992b",
  "homepage": "https://github.com/leeroybrun/node-mt-files-downloader",
  "license": "MIT",
  "main": "lib/Downloader.js",
  "name": "mt-files-downloader",
  "optionalDependencies": {},
  "readme": "# Multi Threaded Files Downloader\n\nThis module wrap the [zeltice-mt-downloader](https://www.npmjs.com/package/zeltice-mt-downloader) module and let you :\n\n- Manage multiple downloads\n- Get stats (speed, eta, completed, etc)\n- Auto-retry (continue) a download in case of error (ie. network error)\n- Manually resume a download from partial file\n- Stop and resume downloads\n- Get notified by events when a download start, fail, retry, stopped, destroyed or complete\n\n## Install\n\n\tnpm install mt-files-downloader\n\n## Usage\n\nRequire the module :\n\n\tvar Downloader = require('mt-files-downloader');\n\nCreate a new Downloader instance :\n\n\tvar downloader = new Downloader();\n\nCreate a new download :\n\n\tvar dl = downloader.download('FILE_URL', 'FILE_SAVE_PATH');\n\nStart the download :\n\n\tdl.start();\n\n## Examples\n\nYou can find complete examples in the `examples/` folder :\n\n- [Simple download](https://github.com/leeroybrun/node-mt-files-downloader/blob/master/examples/simple-download.js)\n- [Multiple downloads](https://github.com/leeroybrun/node-mt-files-downloader/blob/master/examples/multiple-downloads.js)\n- [Resume download](https://github.com/leeroybrun/node-mt-files-downloader/blob/master/examples/resume-download.js)\n- [Stop & resume download](https://github.com/leeroybrun/node-mt-files-downloader/blob/master/examples/stop-n-resume-download.js)\n- [Destroy download](https://github.com/leeroybrun/node-mt-files-downloader/blob/master/examples/destroy-download.js)\n- [Custom download options](https://github.com/leeroybrun/node-mt-files-downloader/blob/master/examples/custom-download-options.js)\n\n## Events\n\nYou can then listen to those events :\n\n- `dl.on('start', function(dl) { ... });`\n- `dl.on('error', function(dl) { ... });`\n- `dl.on('end', function(dl) { ... });`\n- `dl.on('stopped', function(dl) { ... });`\n- `dl.on('destroyed', function(dl) { ... });`\n- `dl.on('retry', function(dl) { ... });`\n\n## Downloader object\n\n### Methods\n\n- download(URL, FILE_SAVE_PATH, [options])\n    - URL : URL of the file to download\n    - FILE_SAVE_PATH : where to save the file (including filename !)\n    - options : optional, passed directly to Download object\n- resumeDownload(filePath) : create a new download by resuming from an existing file\n- getDownloads() : get the list of downloads in manager\n- getDownloadByUrl(url) : get a specified download by URL\n- getDownloadByFilePath(filePath) : get a specified download by file path\n- removeDownloadByFilePath(filePath) : remove a specified download by file path. It does not destroy it, just remove from download manager ! Call download.destroy() before if you want to completely remove it.\n\n### Formatters methods\n\nThe Downloader object exposes some formatters for the stats as static methods :\n\n- Downloader.Formatters.speed(speed)\n- Downloader.Formatters.elapsedTime(seconds)\n- Downloader.Formatters.remainingTime(seconds)\n\n## Download object\n\n### Properties\n\n- status :\n    - -3 = destroyed\n    - -2 = stopped\n    - -1 = error\n    - 0 = not started\n    - 1 = started (downloading)\n    - 2 = error, retrying\n    - 3 = finished\n- url\n- filePath\n- options\n- meta\n\n### Methods\n\n- setUrl(url) : set the download URL\n- setFilePath(path) : set the download file save path\n- setOptions(options) : set the download options\n    - threadsCount: Default: 2, Set the total number of download threads\n    - method: Default: GET, HTTP method\n    - port: Default: 80, HTTP port\n    - timeout: Default: 5000, If no data is received, the download times out (milliseconds)\n    - range: Default: 0-100, Control the part of file that needs to be downloaded.\n- setRetryOptions(options) : set the retry options\n    - maxRetries: Default 5, max number of retries before considering the download as failed\n    - retryInterval: Default 2000, interval (milliseconds) between each retry\n- setMeta(meta) : set download metadata\n- setStatus(status) : set download status\n- setError(error) : set error message for download\n- getStats() : compute and get stats for the download\n- start() : start download\n- resume() : resume download\n- stop() : stop the download, keep the files\n- destroy() : stop the download, remove files\n\n## TODO\n\n- Validate data (setters)\n- Add tests\n\n## Licence\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Leeroy Brun\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/leeroybrun/node-mt-files-downloader.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.2.5"
}
